// Generated by CoffeeScript 1.6.2
(function() {
  var Animal, Parrot, animal, parrot,
    __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  Animal = (function() {
    function Animal(name) {
      this.sell = __bind(this.sell, this);      this.name = name;
    }

    Animal.prototype.price = 5;

    Animal.prototype.sell = function() {
      return console.log("Give me " + this.price + " shillings");
    };

    Animal.find = function(name) {};

    return Animal;

  })();

  Parrot = (function(_super) {
    __extends(Parrot, _super);

    function Parrot() {
      Parrot.__super__.constructor.call(this, "Parrot");
    }

    Parrot.prototype.dead = function() {
      return !this.alive();
    };

    return Parrot;

  })(Animal);

  Animal.prototype.rip = true;

  animal = new Animal("Parrot");

  animal.sell;

  console.log("Animal is a " + animal.name);

  parrot = new Parrot("Macaw");

  if (parrot.rip) {
    console.log("This parrot is no more");
  }

}).call(this);
